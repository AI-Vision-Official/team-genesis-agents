
import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import { FileText, Search, Download, Lightbulb } from 'lucide-react';

export const ResearchMemoAgent = () => {
  const [topic, setTopic] = useState('');
  const [urgency, setUrgency] = useState('medium');
  const [targetAudience, setTargetAudience] = useState('');
  const [sources, setSources] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedMemo, setGeneratedMemo] = useState('');

  const generateMemo = async () => {
    setIsGenerating(true);
    
    // Simulate AI processing
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const memo = `
# Research Memo: ${topic}

**Target Audience:** ${targetAudience}
**Urgency Level:** ${urgency}
**Date:** ${new Date().toLocaleDateString()}

## Executive Summary
This memo provides a comprehensive analysis of ${topic}, synthesizing current research and evidence-based recommendations for immediate action.

## Key Findings
• Current situation analysis shows critical gaps in implementation
• Evidence suggests immediate intervention opportunities exist
• Stakeholder alignment is essential for success
• Resource requirements are within feasible parameters

## Recommendations
1. **Immediate Actions:** Initiate pilot program within 30 days
2. **Medium-term Strategy:** Develop comprehensive implementation plan
3. **Long-term Vision:** Establish sustainable monitoring framework

## Supporting Evidence
${sources ? `Sources analyzed: ${sources}` : 'Analysis based on current humanitarian best practices and sector expertise'}

## Next Steps
- Stakeholder consultation (Week 1-2)
- Resource mobilization (Week 3-4)
- Implementation launch (Month 2)

*This memo was generated by AI Research Agent for humanitarian decision-making support.*
    `;
    
    setGeneratedMemo(memo);
    setIsGenerating(false);
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <FileText className="w-5 h-5" />
          AI Research Memo Generator
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <Label htmlFor="topic">Research Topic</Label>
            <Input
              id="topic"
              value={topic}
              onChange={(e) => setTopic(e.target.value)}
              placeholder="e.g., Climate adaptation in urban slums"
            />
          </div>
          
          <div>
            <Label htmlFor="urgency">Urgency Level</Label>
            <Select value={urgency} onValueChange={setUrgency}>
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="low">Low - Strategic Planning</SelectItem>
                <SelectItem value="medium">Medium - Regular Operations</SelectItem>
                <SelectItem value="high">High - Priority Action</SelectItem>
                <SelectItem value="critical">Critical - Emergency Response</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        <div>
          <Label htmlFor="audience">Target Audience</Label>
          <Input
            id="audience"
            value={targetAudience}
            onChange={(e) => setTargetAudience(e.target.value)}
            placeholder="e.g., Program managers, donors, field teams"
          />
        </div>

        <div>
          <Label htmlFor="sources">Key Sources (Optional)</Label>
          <Textarea
            id="sources"
            value={sources}
            onChange={(e) => setSources(e.target.value)}
            placeholder="List key documents, reports, or data sources to analyze..."
            rows={3}
          />
        </div>

        <div className="flex gap-2">
          <Button 
            onClick={generateMemo} 
            disabled={!topic || isGenerating}
            className="flex-1"
          >
            {isGenerating ? (
              <>
                <Search className="w-4 h-4 mr-2 animate-spin" />
                Analyzing Sources...
              </>
            ) : (
              <>
                <Lightbulb className="w-4 h-4 mr-2" />
                Generate Research Memo
              </>
            )}
          </Button>
        </div>

        {generatedMemo && (
          <div className="mt-6">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-semibold">Generated Memo</h3>
              <div className="flex gap-2">
                <Badge className="bg-green-100 text-green-800">AI Generated</Badge>
                <Button size="sm" variant="outline">
                  <Download className="w-4 h-4 mr-2" />
                  Export
                </Button>
              </div>
            </div>
            <div className="bg-gray-50 p-4 rounded-lg">
              <pre className="whitespace-pre-wrap text-sm">{generatedMemo}</pre>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};
